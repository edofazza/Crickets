"""
Activation functions:
    - relu
    - swish
    - tanh
    - sigmoid
    - gelu
    - elu
    - leaky_relu
"""
ACTIVATION_LOWER_BOUND = 0.0
ACTIVATION_UPPER_BOUND = 6.99

"""
Present can be 0 (not present) or 1 (present)
"""
PRESENT_LOWER_BOUND = 0.0
PRESENT_UPPER_BOUND = 1.99

"""
Filters (conv1d) can be from 16 to 1024
"""
FILTERS_LOWER_BOUND = 16.0
FILTERS_UPPER_BOUND = 1024.99

"""
Batch can be 0 (not present) or 1 (present)
"""
BATCH_LOWER_BOUND = 0.0
BATCH_UPPER_BOUND = 1.99

"""
Dropout can be from 0 to 0.5 (only two decimals but multiple of 0.05, handled in problem)
"""
DROPRATE_LOWER_BOUND = 0.0
DROPRATE_UPPER_BOUND = 0.5099

"""
Middle layer can be:
    - Flatten (0)
    - GlobalAveragePooling1D (1)
"""
MIDDLELAYER_LOWER_BOUND = 0.0
MIDDLELAYER_UPPER_BOUND = 1.99

"""
Units (dense layers) can be from 3 to 512
"""
UNITS_LOWER_BOUND = 3.00
UNITS_UPPER_BOUND = 512.99


LOWER_BOUNDS = [
    PRESENT_LOWER_BOUND,    # Conv1D 0 - 0
    FILTERS_LOWER_BOUND,
    BATCH_LOWER_BOUND,
    ACTIVATION_LOWER_BOUND,
    PRESENT_LOWER_BOUND,
    DROPRATE_LOWER_BOUND,

    PRESENT_LOWER_BOUND,    # Conv1D 1 - 6
    FILTERS_LOWER_BOUND,
    BATCH_LOWER_BOUND,
    ACTIVATION_LOWER_BOUND,
    PRESENT_LOWER_BOUND,
    DROPRATE_LOWER_BOUND,

    PRESENT_LOWER_BOUND,    # Conv1D 2 - 12
    FILTERS_LOWER_BOUND,
    BATCH_LOWER_BOUND,
    ACTIVATION_LOWER_BOUND,
    PRESENT_LOWER_BOUND,
    DROPRATE_LOWER_BOUND,

    PRESENT_LOWER_BOUND,    # Conv1D 3 - 18
    FILTERS_LOWER_BOUND,
    BATCH_LOWER_BOUND,
    ACTIVATION_LOWER_BOUND,
    PRESENT_LOWER_BOUND,
    DROPRATE_LOWER_BOUND,

    PRESENT_LOWER_BOUND,    # Conv1D 4 - 24
    FILTERS_LOWER_BOUND,
    BATCH_LOWER_BOUND,
    ACTIVATION_LOWER_BOUND,
    PRESENT_LOWER_BOUND,
    DROPRATE_LOWER_BOUND,

    MIDDLELAYER_LOWER_BOUND,    # Middle layer - 30

    PRESENT_LOWER_BOUND,    # dense 0 - 31
    UNITS_LOWER_BOUND,
    ACTIVATION_LOWER_BOUND,
    PRESENT_LOWER_BOUND,
    DROPRATE_LOWER_BOUND,

    PRESENT_LOWER_BOUND,    # dense 1 - 36
    UNITS_LOWER_BOUND,
    ACTIVATION_LOWER_BOUND,
    PRESENT_LOWER_BOUND,
    DROPRATE_LOWER_BOUND,

    PRESENT_LOWER_BOUND,    # dense 2 - 41
    UNITS_LOWER_BOUND,
    ACTIVATION_LOWER_BOUND,
    PRESENT_LOWER_BOUND,
    DROPRATE_LOWER_BOUND,

    PRESENT_LOWER_BOUND,    # dense 3 - 46
    UNITS_LOWER_BOUND,
    ACTIVATION_LOWER_BOUND,
    PRESENT_LOWER_BOUND,
    DROPRATE_LOWER_BOUND,

    PRESENT_LOWER_BOUND,    # dense 4 - 51
    UNITS_LOWER_BOUND,
    ACTIVATION_LOWER_BOUND,
    PRESENT_LOWER_BOUND,
    DROPRATE_LOWER_BOUND
]

UPPER_BOUNDS = [
    PRESENT_UPPER_BOUND,    # Conv1D 0
    FILTERS_UPPER_BOUND,
    BATCH_UPPER_BOUND,
    ACTIVATION_UPPER_BOUND,
    PRESENT_UPPER_BOUND,
    DROPRATE_UPPER_BOUND,

    PRESENT_UPPER_BOUND,    # Conv1D 1
    FILTERS_UPPER_BOUND,
    BATCH_UPPER_BOUND,
    ACTIVATION_UPPER_BOUND,
    PRESENT_UPPER_BOUND,
    DROPRATE_UPPER_BOUND,

    PRESENT_UPPER_BOUND,  # Conv1D 2
    FILTERS_UPPER_BOUND,
    BATCH_UPPER_BOUND,
    ACTIVATION_UPPER_BOUND,
    PRESENT_UPPER_BOUND,
    DROPRATE_UPPER_BOUND,

    PRESENT_UPPER_BOUND,  # Conv1D 3
    FILTERS_UPPER_BOUND,
    BATCH_UPPER_BOUND,
    ACTIVATION_UPPER_BOUND,
    PRESENT_UPPER_BOUND,
    DROPRATE_UPPER_BOUND,

    PRESENT_UPPER_BOUND,  # Conv1D 4
    FILTERS_UPPER_BOUND,
    BATCH_UPPER_BOUND,
    ACTIVATION_UPPER_BOUND,
    PRESENT_UPPER_BOUND,
    DROPRATE_UPPER_BOUND,

    MIDDLELAYER_UPPER_BOUND,

    PRESENT_UPPER_BOUND,    # dense 0
    UNITS_UPPER_BOUND,
    ACTIVATION_UPPER_BOUND,
    PRESENT_UPPER_BOUND,
    DROPRATE_UPPER_BOUND,

    PRESENT_UPPER_BOUND,    # dense 1
    UNITS_UPPER_BOUND,
    ACTIVATION_UPPER_BOUND,
    PRESENT_UPPER_BOUND,
    DROPRATE_UPPER_BOUND,

    PRESENT_UPPER_BOUND,    # dense 2
    UNITS_UPPER_BOUND,
    ACTIVATION_UPPER_BOUND,
    PRESENT_UPPER_BOUND,
    DROPRATE_UPPER_BOUND,

    PRESENT_UPPER_BOUND,    # dense 3
    UNITS_UPPER_BOUND,
    ACTIVATION_UPPER_BOUND,
    PRESENT_UPPER_BOUND,
    DROPRATE_UPPER_BOUND,

    PRESENT_UPPER_BOUND,    # dense 4
    UNITS_UPPER_BOUND,
    ACTIVATION_UPPER_BOUND,
    PRESENT_UPPER_BOUND,
    DROPRATE_UPPER_BOUND,
]

if __name__=='__main__':
    print(len(UPPER_BOUNDS), len(LOWER_BOUNDS))
